plugins {
    id 'com.github.johnrengelman.shadow' version '6.0.0'
    id "org.panteleyev.jpackageplugin" version "1.3.0"
    id "com.github.hierynomus.license-report" version "0.15.0"
    id "org.jetbrains.kotlin.jvm" version "1.5.21"
    id 'java'
    id 'idea'
    id 'application'
}

apply plugin: 'java'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(15)
    }
}

repositories {
    mavenCentral()
    maven {
        url 'https://maven.ej-technologies.com/repository'
    }
}

application {
    mainClassName = 'org.wysko.midis2jam2.gui.GuiLauncher'
}

shadowJar {
    doFirst {
        new File(projectDir, "src/main/resources/version.txt").text = getArchiveVersion().get()
    }
}

dependencies {
    // JMonkeyEngine
    implementation "org.jmonkeyengine:jme3-core:3.4.0-stable"
    implementation "org.jmonkeyengine:jme3-desktop:3.4.0-stable"
    implementation "org.jmonkeyengine:jme3-lwjgl:3.4.0-stable"
    implementation 'org.jmonkeyengine:jme3-plugins:3.4.0-stable'

    implementation 'org.jetbrains:annotations:20.1.0'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'

    implementation 'com.formdev:flatlaf:1.1.2'

    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'org.junit.jupiter:junit-jupiter:5.7.0'

    testImplementation(platform('org.junit:junit-bom:5.7.2'))
    testImplementation('org.junit.jupiter:junit-jupiter')

    // https://mvnrepository.com/artifact/com.install4j/install4j-runtime
    implementation group: 'com.install4j', name: 'install4j-runtime', version: '9.0.4'

}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

allprojects {
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation" << "--add-exports" << "java.desktop/com.sun.media.sound=ALL-UNNAMED"
        }
    }
}

downloadLicenses {
    includeProjectDependencies = true
    dependencyConfiguration = "compileClasspath"
}

compileJava {
    dependsOn "downloadLicenses"
    copy {
        from "build/reports/license/dependency-license.html"
        into "src/main/resources"
    }
}