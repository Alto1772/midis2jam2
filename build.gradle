plugins {
    id 'com.github.johnrengelman.shadow' version '6.0.0'
    id "org.panteleyev.jpackageplugin" version "1.3.0"
    id 'java'
    id 'idea'
    id 'application'
}

apply plugin: 'java'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(15)
    }
}

repositories {
    mavenCentral()
}

application {
    mainClassName = 'org.wysko.midis2jam2.GuiLauncher'
}

shadowJar {
    doFirst {
        new File(projectDir, "src/main/resources/version.txt").text = getArchiveVersion().get()
    }
}

tasks.jpackage {
    dependsOn("shadowJar")

    appName = "midis2jam2"
    appVersion = version
    appDescription = "midis2jam2"
    vendor = "Jacob Wysko"
    copyright = "Copyright (c) 2021 Jacob Wysko"
    runtimeImage = System.getProperty("java.home")
    licenseFile = "LICENSE"
    input = "$buildDir/libs"
    destination = "$buildDir/package/midis2jam2"
    mainJar = "midis2jam2-" + version + "-all.jar"
    mainClass = "org.wysko.midis2jam2.Launcher"
    javaOptions = ["-Dfile.encoding=UTF-8"].asList()

    // Mac and Linux icon
    icon = "src/main/resources/ico/icon512.png"
    windows {
        icon = "src/main/resources/ico/icon.ico"
    }
    macPackageIdentifier = "org.wysko.midis2jam2"
    mac {
        icon = "src/main/resources/ico/icon.icns"
    }
    // Windows specific parameters will be processed only during Windows build
    winMenu = true // Adds shortcut to Start Menu
    winDirChooser = true // Allows user to choose install dir
    winMenuGroup = "midis2jam2"
    winShortcut = true


    linuxShortcut = true
    linuxDebMaintainer = "jacob@wysko.org"
    linuxRpmLicenseType = "GPLv3"
    linux {
        installDir = "/usr" // Linux installation prefix (/usr/bin/app, /usr/lib/app, etc.)
    }


}

dependencies {
    // JMonkeyEngine
    implementation "org.jmonkeyengine:jme3-core:3.4.0-stable"
    implementation "org.jmonkeyengine:jme3-desktop:3.4.0-stable"
    implementation "org.jmonkeyengine:jme3-lwjgl:3.4.0-stable"
    implementation 'org.jmonkeyengine:jme3-plugins:3.4.0-stable'

    implementation 'org.jetbrains:annotations:20.1.0'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'

    implementation 'com.formdev:flatlaf:1.1.2'

    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'org.junit.jupiter:junit-jupiter:5.7.0'

    testImplementation(platform('org.junit:junit-bom:5.7.2'))
    testImplementation('org.junit.jupiter:junit-jupiter')
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

allprojects {
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation" << "--add-exports" << "java.desktop/com.sun.media.sound=ALL-UNNAMED"
        }
    }
}